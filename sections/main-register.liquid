{% assign call_page = false %}
{% if call_page %}
{{ 'customer.css' | asset_url | stylesheet_tag }}

{% if section.settings.top_padding_remove or section.settings.bottom_padding_remove %}
  <style>
    {% if section.settings.top_padding_remove %}
      #shopify-section-{{ section.id }}.section-padding{
        padding-top: 0 !important;
      }
    {% endif %}
    
    {% if section.settings.bottom_padding_remove %}
      #shopify-section-{{ section.id }}.section-padding{
        padding-bottom: 0 !important;
      }
    {% endif %}
  </style>
{% endif %}

<div class="customer register">
  <svg style="display: none">
    <symbol id="icon-error" viewBox="0 0 13 13">
      <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
      <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
      <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
      <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
    </symbol>
  </svg>
  <h1 class="h2">
    {{ 'customer.register.title' | t }}
  </h1>
  {%- form 'create_customer', novalidate: 'novalidate' -%}
    {%- if form.errors -%}
      {% comment %}
      <h2 class="form__message" tabindex="-1" autofocus>
        <svg aria-hidden="true" focusable="false">
          <use href="#icon-error" />
        </svg>
        {{ 'templates.contact.form.error_heading' | t }}
      </h2>
      {% endcomment %}
      <div class="errors">
        <ul>
          {%- for field in form.errors -%}
            <li>
              {%- if field == 'form' -%}
                {{ form.errors.messages[field] }}
              {%- else -%}
                <a href="#RegisterForm-{{ field }}">
                  {{ form.errors.translated_fields[field] | capitalize }}
                  {{ form.errors.messages[field] }}
                </a>
              {%- endif -%}
            </li>
          {%- endfor -%}
        </ul>
      </div>
    {%- endif -%}
    <div class="field field-grp">
      <input class="input-field"
        type="text"
        name="customer[first_name]"
        id="RegisterForm-FirstName"
        {% if form.first_name %}
          value="{{ form.first_name }}"
        {% endif %}
        autocomplete="given-name"
        placeholder="{{ 'customer.register.first_name' | t }}"
      >
      <label for="RegisterForm-FirstName">
        {{ 'customer.register.first_name' | t }}
      </label>
      <p class="error-text">This field is required</p>
    </div>
    <div class="field field-grp">
      <input class="input-field"
        type="text"
        name="customer[last_name]"
        id="RegisterForm-LastName"
        {% if form.last_name %}
          value="{{ form.last_name }}"
        {% endif %}
        autocomplete="family-name"
        placeholder="{{ 'customer.register.last_name' | t }}"
      >
      <label for="RegisterForm-LastName">
        {{ 'customer.register.last_name' | t }}
      </label>
      <p class="error-text">This field is required</p>
    </div>
    <div class="field field-grp">
      <input class="input-field"
        type="email"
        name="customer[email]"
        id="RegisterForm-email"
        {% if form.email %}
          value="{{ form.email }}"
        {% endif %}
        spellcheck="false"
        autocapitalize="off"
        autocomplete="email"
        aria-required="true"
        {% if form.errors contains 'email' %}
          aria-invalid="true"
          aria-describedby="RegisterForm-email-error"
        {% endif %}
        placeholder="{{ 'customer.register.email' | t }}"
      >
      <label for="RegisterForm-email">
        {{ 'customer.register.email' | t }}
      </label>
      <p class="error-text">This field is required</p>
    </div>
    {%- if form.errors contains 'email' -%}
      <span id="RegisterForm-email-error" class="form__message error-text">
        {% comment %}
          <svg aria-hidden="true" focusable="false">
            <use href="#icon-error" />
          </svg>
        {% endcomment %}
        {{ form.errors.translated_fields.email | capitalize }}
        {{ form.errors.messages.email }}.
      </span>
    {%- endif -%}
    <div class="field field-grp">
      <div class="pass-input-field" data-password-field>
        <input class="input-field"
          type="password"
          name="customer[password]"
          id="RegisterForm-password"
          aria-required="true"
          {% if form.errors contains 'password' %}
            aria-invalid="true"
            aria-describedby="RegisterForm-password-error"
          {% endif %}
          placeholder="{{ 'customer.register.password' | t }}"
        >
        <div class="show-password-icon" data-toggle-password>
          {% render 'eye-icon' %}
        </div>
      </div>
      <label for="RegisterForm-password">
        {{ 'customer.register.password' | t }}
      </label>
      <p class="error-text">This field is required</p>
    </div>
    {%- if form.errors contains 'password' -%}
      <span id="RegisterForm-password-error" class="form__message error-text">
        {% comment %}
        <svg aria-hidden="true" focusable="false">
          <use href="#icon-error" />
        </svg>
        {% endcomment %}
        {{ form.errors.translated_fields.password | capitalize }}
        {{ form.errors.messages.password }}.
      </span>
    {%- endif -%}
    <button class="button button--primary button--full-width" data-form-submit>
      {{ 'customer.register.submit' | t }}
    </button>
  {%- endform -%}
</div>

            

{% else %}
<div data-mariana-integrations="/account"></div>

<script>
  (function () {
    // Set tenant name here
    var TENANT_NAME = 'sweatandtonic';

    var d = document;
    var sA = ['polyfills', 'js'];

    for (var i = 0; i < sA.length; i++) {
      var s = d.createElement('script');
      s.src = 'https://' + TENANT_NAME + '.marianaiframes.com/' + sA[i];
      s.setAttribute('data-timestamp', +new Date());
      (d.head || d.body).appendChild(s);
    }
  })();
</script>
<noscript>
  Please enable JavaScript to view the
  <a href="https://marianatek.com/?ref_noscript" rel="nofollow">
    Web Integrations by Mariana Tek.
  </a>
</noscript>
{% endif %}
{%- javascript -%}
  
document.addEventListener("DOMContentLoaded", function() {

  const form = document.querySelector('#create_customer');
  if(form){
    
    //login form submit
    const submitBtn = form.querySelector('[data-form-submit]');
    if(submitBtn){
      submitBtn.addEventListener('click', function(evt){
        evt.preventDefault();
        validateForm(form);
      });
    }

    //show-hide password text
    const passToggleBtn = form.querySelector('[data-toggle-password]');
    if(passToggleBtn){
      passToggleBtn.addEventListener('click', function(evt){
        evt.preventDefault();
        if(evt.target.closest('[data-password-field]')){
          evt.target.closest('[data-password-field]').classList.toggle('pass-show');  
          const inputField = evt.target.closest('[data-password-field]').querySelector('input[name="customer[password]"]');
          if (inputField.getAttribute("type") == "password") {
            inputField.setAttribute("type", "text");
          } else {
            inputField.setAttribute("type", "password");
          }
        }
      });
    }
    
  }
});

function validateForm(form){
  const requiredFormField = [...form.querySelectorAll('input[name="customer[first_name]"], input[name="customer[email]"], input[name="customer[password]"]')];
  let errorCount = 0;
  if(requiredFormField.length){
    requiredFormField.forEach(field => {
      const fieldValue = field.value.trim();
      field.closest('.field-grp').classList.remove('error-active');
      if(!fieldValue.length){
        field.closest('.field-grp').classList.add('error-active');
        errorCount += 1;
      }
    });
  }
  if(errorCount === 0){
   form.submit();
  }else{
    return false;
  }
}
  
{%- endjavascript -%}
            
{% schema %}
{
  "name": "t:sections.main-register.name",
  "class": "section-padding customer-section",
  "settings": [
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "checkbox",
      "id": "top_padding_remove",
      "default": false,
      "label": "Remove top padding"
    },
    {
      "type": "checkbox",
      "id": "bottom_padding_remove",
      "default": false,
      "label": "Remove bottom padding"
    }
  ]
}
{% endschema %}
