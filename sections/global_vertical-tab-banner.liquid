{%- if section.index == 1 -%}
  
  {{- 'section-image-banner.css' | asset_url | stylesheet_tag: preload: true -}}
  {{- 'hit-banner-column.css' | asset_url | stylesheet_tag: preload: true -}}
  
  {%- assign loadingType = 'eager' -%}
  {%- assign fetchPriorityType = 'high' -%}
  
{%- else -%}
  
  <link rel="stylesheet" href="{{ 'section-image-banner.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'hit-banner-column.css' | asset_url }}" media="print" onload="this.media='all'">
  <noscript><link rel="stylesheet" href="{{ 'section-image-banner.css' | asset_url }}"></noscript>
  <noscript><link rel="stylesheet" href="{{ 'hit-banner-column.css' | asset_url }}"></noscript>
  
  {%- assign loadingType = 'lazy' -%}
  {%- assign fetchPriorityType = 'auto' -%}
  
{%- endif -%}


{%- if section.settings.image_height == 'adapt' and section.settings.image != blank -%}
 {%- if section.settings.img_mobile != blank -%}
    {%- assign imageObj = section.settings.img_mobile -%}
  {%- else -%}
    {%- assign imageObj = section.settings.image -%}
  {%- endif -%}
  
  {%- style -%}
    @media screen and (max-width: 749px) {
      #Banner-{{ section.id }}::before,
      #Banner-{{ section.id }} .banner__media::before{
        padding-bottom: {{ 1 | divided_by: imageObj.aspect_ratio | times: 100 }}%;
        content: '';
        display: block;
      }
    }

    @media screen and (min-width: 750px) {
      #Banner-{{ section.id }}::before,
      #Banner-{{ section.id }} .banner__media::before {
        padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;
        content: '';
        display: block;
      }
    }
  {%- endstyle -%}
{%- endif -%}


{%- style -%}
  #Banner-{{ section.id }}::after {
    opacity: {{ section.settings.image_overlay_opacity | divided_by: 100.0 }};
  }
{%- endstyle -%}

{%- liquid
  assign full_width = '100vw'
  assign widths = '375, 550, 750, 1100, 1500, 1780, 2000, 3000, 3840'

  if section.settings.image_behavior == 'ambient'
    assign half_width = '60vw'
    assign full_width = '120vw'
    assign stacked_sizes = '(min-width: 750px) 60vw, 120vw'
    assign widths = '450, 660, 900, 1320, 1800, 2136, 2400, 3600, 7680'
  elsif section.settings.image_behavior == 'fixed' or section.settings.image_behavior == 'zoom-in'
    assign half_width = '100vw'
    assign stacked_sizes = '100vw'
  else
    assign half_width = '50vw'
    assign stacked_sizes = '(min-width: 750px) 50vw, 100vw'
  endif
-%}



<div
  id="Banner-{{ section.id }}"
  class="banner banner--content-align-left banner--content-align-mobile-left banner--{{ section.settings.image_height }}
  {% if section.settings.image_height == 'adapt' and section.settings.image != blank %} banner--adapt{% endif %}
  {% if section.settings.show_text_box == false %} banner--desktop-transparent{% endif %}
  {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
>
  {%- if section.settings.image != blank -%}
    <div class="banner__media media{% if section.settings.image == blank %} placeholder{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}{% if section.settings.img_mobile != blank %} small-hide{% endif %}">
      {%- liquid
        assign image_height = section.settings.image.width | divided_by: section.settings.image.aspect_ratio
        assign sizes = full_width
      -%}
      {{
        section.settings.image
        | image_url: width: 3840
        | image_tag:
          loading: loadingType,
          fetchPriority: fetchPriorityType,
          width: section.settings.image.width,
          height: image_height,
          sizes: sizes,
          widths: widths
      }}
    </div>
  {%- else -%}
    <div class="banner__media media placeholder{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}{% if section.settings.img_mobile != blank %} small-hide{% endif %}">
      {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
    </div>
  {%- endif -%}  
  {%- if section.settings.img_mobile != blank -%}
    <div class="banner__media media{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %} medium-hide large-up-hide">
      {%- liquid
        assign image_height_2 = section.settings.img_mobile.width | divided_by: section.settings.img_mobile.aspect_ratio
          assign sizes = full_width
      -%}
      {{
        section.settings.img_mobile
        | image_url: width: 1100
        | image_tag:
          loading: loadingType,
          fetchPriority: fetchPriorityType,
          width: section.settings.img_mobile.width,
          height: image_height_2,
          sizes: sizes,
          widths: widths
      }}
    </div>
  {%- endif -%}

  <div class="banner__content banner__content--full-width scroll-trigger animate--slide-in">
    {%- if section.blocks.size > 0 -%}
      {%- assign active = false -%}
      {%- assign tab_active = false -%}
      <div class="banner-vertical-grid">
        <div class="tab-dots">
          {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'features' -%}
            <span class="tab-dot{%  if tab_active == false %} active{% endif %}" data-index="{{ forloop.index }}"></span>              
            {%- assign tab_active = true -%}
          {%- endcase -%}
          {%- endfor -%}
        </div>
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'features' -%}                    
              {%- assign svgIcon = block.settings.svg -%}
              {%- assign title = block.settings.title -%}
              {%- assign subheading = block.settings.subheading -%}
              {%- assign description = block.settings.desc -%}
              {%- if svgIcon != blank or title != blank or description != blank -%}
                <div class="vertical-tab col{% if active == false %} active{% endif %}" data-index="{{ forloop.index }}"
                  {% if block.settings.text_clr != blank and block.settings.text_clr != 'rgba(0,0,0,0)' %} style="color: {{ block.settings.text_clr }};"{% endif %} {{ block.shopify_attributes }}
                >
                  <div class="not-active">
                    <label class="h5">{{ title }}</label>
                    {{ svgIcon }}
                  </div>
                  <div class="box{% if active == false %} active-box{% endif %}">
                    {%- if subheading != blank -%}
                      <h5 class="heading box-heading">{{ subheading }}</h5>
                    {%- endif -%}
                    <div class="box-content">
                      {%- if svgIcon != blank -%}{{ svgIcon }}{%- endif -%}
                      {%- if title != blank -%}<h4>{{ title }}</h4>{%- endif -%}
                      {%- if description != blank -%}
                        <div class="text-wrap">{{ description }}</div>
                      {%- endif -%}
                    </div>
                  </div>
                </div>
                {%- assign active = true -%}
              {%- endif -%}
          {%- endcase -%}
        {%- endfor -%}          
      </div>
    {%- endif -%}
  </div>
</div>

{% schema %}
{  
  "name": "Vertical tab banner",
  "tag": "section",
  "class": "section vertical-tab-banner",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "allow_transparent_header",
      "label": "Allow transparent header",
      "info": "This setting only applies when this section is the first one.",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Desktop image"
    },
    {
      "type": "image_picker",
      "id": "img_mobile",
      "label": "Mobile image"
    },
    {
      "type": "range",
      "id": "image_overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "t:sections.image-banner.settings.image_overlay_opacity.label",
      "default": 0
    },
    {
      "type": "select",
      "id": "image_height",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.image-banner.settings.image_height.options__1.label"
        },
        {
          "value": "small",
          "label": "t:sections.image-banner.settings.image_height.options__2.label"
        },
        {
          "value": "medium",
          "label": "t:sections.image-banner.settings.image_height.options__3.label"
        },
        {
          "value": "large",
          "label": "t:sections.image-banner.settings.image_height.options__4.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.image-banner.settings.image_height.label",
      "info": "t:sections.image-banner.settings.image_height.info"
    },
    {
      "type": "checkbox",
      "id": "show_text_box",
      "default": true,
      "label": "t:sections.image-banner.settings.show_text_box.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.animation.content"
    },
    {
      "type": "select",
      "id": "image_behavior",
      "options": [
        {
          "value": "none",
          "label": "t:sections.all.animation.image_behavior.options__1.label"
        },
        {
          "value": "ambient",
          "label": "t:sections.all.animation.image_behavior.options__2.label"
        },
        {
          "value": "fixed",
          "label": "t:sections.all.animation.image_behavior.options__3.label"
        },
        {
          "value": "zoom-in",
          "label": "t:sections.all.animation.image_behavior.options__4.label"
        }
      ],
      "default": "none",
      "label": "t:sections.all.animation.image_behavior.label"
    }
  ],
  "blocks": [
    {
      "type": "features",
      "name": "Features",
      "limit": 4,
      "settings": [
        {
          "type": "color",
          "id": "text_clr",
          "default": "#fff",
          "label": "Color scheme"
        },
        {
          "type": "header",
          "content": "Features content"
        },
        {
          "type": "html",
          "id": "svg",
          "label": "SVG code"
        },
        {
          "type": "text",
          "id": "title",
          "default": "STATE-OF-THE-ART EQUIPMENT",
          "label": "Title"
        },
        {
          "type": "text",
          "id": "subheading",
          "default": "HIIT YOUR PEAK PERFORMANCE",
          "label": "Sub heading"
        },
        {
          "type": "richtext",
          "id": "desc",
          "default": "<p>Technogym Skillrun Treadmills designed for professional athletes, Aqua punching bags, and a theatre-quality light and sound system set the stage</p>",
          "label": "Description"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Vertical tab banner",
      "blocks": [
        {
          "type": "features",          
        },        
        {
          "type": "features",          
        },
        {
          "type": "features",          
        },
        {
          "type": "features",          
        }        
      ]
    }
  ]
}
{% endschema %}

{% stylesheet %}
  /* global_vertical-tab-banner */
  .vertical-tab-banner {
    position: relative;
    z-index: 2;
  }
  .banner .banner__content--full-width {
    padding: 0;
  }

  .banner .banner-vertical-grid {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    --box-inline: 2rem;
    --box-block: 4rem;
  }  
  .vertical-tab.active .box {
    display: flex;
    border-top: 1px solid rgba(255, 255, 255, 0.15);    
    width: 100%;
    visibility: hidden;
    opacity: 0;
    transition: 0.0s 0.5s visibility, opacity 0.5s linear;
    flex-direction: column;
  }
  .vertical-tab.active .not-active {
    display: none;
  }
  .vertical-tab.active .box.active-box {
    visibility: visible;
    opacity: 1;
    transition: 0.0s visibility, opacity 0.5s linear;
    position: static;
  }

  .vertical-tab {    
    display: flex;    
    transition: all .25s linear;    
    width: 100%;
  }
  
  .vertical-tab.active + .vertical-tab {
    margin-top : auto;    
  }
  .vertical-tab.active {
    width: 100%;
    max-width: 100%;
    flex: 1 0;
    transition: none;
    margin-inline: 0;
    background: linear-gradient(50deg, rgba(11, 7, 6, 0.90) 27.07%, rgba(11, 7, 6, 0.00) 86.05%);    
    transition: all .25s .25s linear;
  }
  .vertical-tab .not-active {
    display: flex;
    align-items: center;
    padding: 2rem;
    justify-content: flex-end;
    flex-direction: row-reverse;
    gap: 2rem;  
    width: 100%;
    cursor: pointer;
    border-top: 1px solid rgba(255, 255, 255, 0.15);
    background: linear-gradient(50deg, rgba(11, 7, 6, 0.90) 27.07%, rgba(11, 7, 6, 0.00) 86.05%);
  }
  .vertical-tab .not-active svg {
    width: 3.2rem;
    height: 3.2rem;
    display: block;
  }
  .vertical-tab .not-active label {    
    text-transform: uppercase;
  }
  
  .vertical-tab .box {
    padding: var(--box-block) var(--box-inline);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    visibility: hidden;
    opacity: 0;
  }
  .vertical-tab .box .box-content {
    margin-top: auto;
    max-width: 35rem;
  }

  .vertical-tab .not-active label,
  .vertical-tab .box .box-heading, .vertical-tab .box h4 {
    font-weight: var(--font-heading-weight);
    line-height: 1;
  }

  .vertical-tab .box .box-content svg {
    width: 4rem;
    height: 4rem;
    display: block;
    margin-bottom: 3.2rem;
  }
  .vertical-tab .box .box-content h4 {
    margin-block: 0;
  }
  .vertical-tab .box .box-content .text-wrap {
    margin-top: 1.2rem;
    font-weight: 300;
  }

  .banner-vertical-grid .tab-dots {
    position: absolute;
    top: calc(var(--active-offsetTop) + var(--box-block));    
    right: calc(var(--box-inline));
    display: flex;
    flex-direction: column;
    gap: 2.4rem;
    transition: all .25s linear;
    visibility: hidden;
  }
  .banner-vertical-grid .tab-dots.show-dots {
    visibility: visible;
  }

  .banner-vertical-grid .tab-dots .tab-dot {
    width: 0.8rem;
    height: 0.8rem;
    display: block;
    border-radius: 50%;
    background: #fff;
    opacity: 0.4;
    cursor: pointer;
  }

  .banner-vertical-grid .tab-dots .tab-dot:hover,
  .banner-vertical-grid .tab-dots .tab-dot.active {
    opacity: 1;
  }

  @media screen and (min-width: 990px){
    .banner .banner-vertical-grid {      
      flex-direction: row;
    }
    .banner .banner-vertical-grid {      
      --box-inline: 5rem;
      --box-block: 4rem;
    }
    .vertical-tab {
      width: 9.22%;
      flex: 0 0 10.4rem;
      max-width: 7rem;
    }    
    .vertical-tab.active + .vertical-tab {
      margin-left: auto;
      margin-top: 0;
    }

    .vertical-tab .not-active {      
      flex-direction: column;      
      border-left: 1px solid rgba(255, 255, 255, 0.15);
      border-top-width: 0;
      background: linear-gradient(219deg, rgba(11, 7, 6, 0.00) 21.58%, rgba(11, 7, 6, 0.90) 77.48%);
    }
    .vertical-tab .not-active label {
      writing-mode: sideways-lr;
      text-orientation: mixed;
    }
    .vertical-tab.active {
      background: linear-gradient(258deg,#0b070600,#0b0706e6);
    }
    .vertical-tab.active .box{
      border-left: 1px solid rgba(255, 255, 255, 0.15);    
    }

    .banner-vertical-grid .tab-dots {    
      top: calc(var(--box-block) + 1rem - 0.4rem);
      left: calc(var(--active-offset) - var(--box-inline));
      right: auto;
      flex-direction: row;
    }
  }
  @media screen and (min-width: 1266px){
    .banner .banner-vertical-grid {      
      --box-inline: 10rem;
      --box-block: 8rem;
    }
    .vertical-tab {      
      max-width: 10.4rem;
    }
    .vertical-tab .not-active {      
      padding: 3.2rem;
    }
  }

  @media screen and (max-width: 990px){
    .vertical-tab .box .box-heading {
      font-size: 1.2rem;
    }
    .vertical-tab .box .box-content h4 {
      font-size: 2.8rem;
      text-transform: uppercase;
    }
    .vertical-tab .box .box-content svg {
      width: 3.5rem;
      height: 3.5rem;
    }
    .banner .banner-vertical-grid {
      min-height: 80rem;
    }
    .vertical-tab .box {
      min-height: 58rem;
    }
  }
  /* global_vertical-tab-banner */
{% endstylesheet %}
{% javascript %}
  document.querySelectorAll('.vertical-tab .not-active').forEach((eleNotActive) => {
    eleNotActive.addEventListener('click', function(){
      const eleParentWrpper = eleNotActive.closest('.banner-vertical-grid');
      const dataIndex = eleNotActive.parentNode.dataset.index;
      eleParentWrpper.querySelector('.tab-dot.active').classList.remove('active');
      eleParentWrpper.querySelector('.tab-dot[data-index="'+dataIndex+'"]').classList.add('active');

      const not_active_eles = Array.from(eleParentWrpper.querySelectorAll('.vertical-tab')).filter((element) => !element.classList.contains('active'));      
      let notElWidth = 0;
      not_active_eles.forEach(function(notAcEl){
        notElWidth += notAcEl.clientWidth;        
      });

      //eleParentWrpper.querySelector('.active .box').style.width = '';
      eleParentWrpper.querySelector('.vertical-tab.active .box').classList.remove('active-box');
      eleParentWrpper.querySelector('.vertical-tab.active').classList.remove('active');

      eleNotActive.parentNode.classList.add('active');      

      setTimeout(function(){
        eleNotActive.parentNode.querySelector('.box').classList.add('active-box');
        //eleNotActive.parentNode.querySelector('.box').style.width =  window.innerWidth - notElWidth+'px';
          const clientWidth = eleNotActive.parentNode.querySelector('.box').clientWidth, offsetLeft = eleNotActive.parentNode.querySelector('.box').offsetLeft,
          dotsWidth = eleParentWrpper.querySelector('.tab-dots').clientWidth;
          eleParentWrpper.querySelector('.tab-dots').style.setProperty('--active-offset', `${( (document.body.clientWidth - notElWidth) + offsetLeft ) - dotsWidth }px`);
          eleParentWrpper.querySelector('.tab-dots').style.setProperty('--active-offsetTop', `${eleNotActive.parentNode.querySelector('.box').offsetTop }px`);
      }, 350);
    })
  });

  setDotsPosition();
  function setDotsPosition(){
    document.querySelectorAll('.banner-vertical-grid').forEach(function(ele){
      ele.style.minHeight = ele.clientHeight+'px';
      const clientWidth = ele.querySelector('.active .box').clientWidth, offsetLeft = ele.querySelector('.active .box').offsetLeft,
      dotsWidth = ele.querySelector('.tab-dots').clientWidth;
      ele.querySelector('.tab-dots').style.setProperty('--active-offset', `${( (clientWidth) + offsetLeft ) - dotsWidth }px`);
      ele.querySelector('.tab-dots').style.setProperty('--active-offsetTop', `${ ele.querySelector('.active .box').offsetTop }px`);
      ele.querySelector('.tab-dots').classList.add('show-dots');      
    })
  }

  document.querySelectorAll('.banner-vertical-grid').forEach(function(ele){
    ele.querySelectorAll('.tab-dot').forEach(function(ele_dot){
      ele_dot.addEventListener('click', function(){
        const parentWrapper = ele;
        const dataIndex = this.dataset.index;
        parentWrapper.querySelector('.vertical-tab[data-index="'+ dataIndex +'"] .not-active')?.click();
      });
    });
  });
{% endjavascript %}